# üìÑ redisq_listener.py
import aiohttp
import asyncio
from config import REDISQ_URL, TARGET_CORPORATION_ID
from telegram_sender import send_to_telegram

async def fetch_killmails():
    """–ü–æ–ª—É—á–∞–µ—Ç –∫–∏–ª–ª–º–µ–π–ª—ã –∏–∑ RedisQ –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –≤ Telegram –ø—Ä–∏ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–∏ —Ñ–∏–ª—å—Ç—Ä—É."""
    async with aiohttp.ClientSession() as session:
        while True:
            try:
                async with session.get(REDISQ_URL, timeout=15) as response:
                    if response.status == 200:
                        data = await response.json()
                        if data.get('package'):
                            killmail = data['package']['killmail']
                            victim_corp_id = killmail['victim'].get('corporation_id')

                            if victim_corp_id == TARGET_CORPORATION_ID:
                                await send_to_telegram(killmail)
                            else:
                                print(f"‚ö†Ô∏è –ö–∏–ª–ª {killmail['killmail_id']} –Ω–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç —Ñ–∏–ª—å—Ç—Ä—É.")
                        else:
                            print("üîÑ –ù–µ—Ç –Ω–æ–≤—ã—Ö –∫–∏–ª–ª–æ–≤.")
                            await asyncio.sleep(1)  # –ñ–¥–µ–º –¥–æ–ª—å—à–µ, –µ—Å–ª–∏ –Ω–µ—Ç –Ω–æ–≤—ã—Ö –∫–∏–ª–ª–æ–≤
                    else:
                        print(f"‚ùå –û—à–∏–±–∫–∞ RedisQ: {response.status}")
                        await asyncio.sleep(10)
            except asyncio.TimeoutError:
                print("‚è≥ –¢–∞–π–º–∞—É—Ç –∑–∞–ø—Ä–æ—Å–∞ –∫ RedisQ. –ü–æ–≤—Ç–æ—Ä —á–µ—Ä–µ–∑ 10 —Å–µ–∫...")
                await asyncio.sleep(10)
            except Exception as e:
                print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞: {e}")
                await asyncio.sleep(10)
